{"version":3,"sources":["сomponents/Profile/MyPosts/MyPosts.module.css","assets/images/Spinner-1s-200px.svg","сomponents/Profile/MyPosts/Post/Post.module.css","logo.svg","сomponents/Navbar/Navbar.module.css","сomponents/Profile/ProfileInfo/ProfileInfo.module.css","сomponents/Dialogs/Dialogs.module.css","сomponents/Header/Header.jsx","сomponents/Navbar/Navbar.jsx","сomponents/News/News.jsx","redux/dialogs-reducer.js","api/api.js","redux/profile-reducer.js","redux/sidebar-reducer.js","redux/store.js","сomponents/Dialogs/DialogItem/DialogItem.jsx","сomponents/Dialogs/Message/Message.jsx","сomponents/common/FormControl/FormsControls.js","utils/validators/validators.js","сomponents/Dialogs/Dialogs.jsx","api/hoc/withAuthRedirect.js","сomponents/Dialogs/DialogsContainer.jsx","redux/users-reducer.js","сomponents/common/Paginator/Paginator.jsx","сomponents/Users/User.jsx","сomponents/Users/Users.jsx","сomponents/common/preloader/Preloader.js","redux/users-selectors.js","сomponents/Users/UsersContainer.jsx","сomponents/Profile/MyPosts/Post/Post.jsx","сomponents/Profile/MyPosts/MyPosts.jsx","сomponents/Profile/MyPosts/MyPostsContainer.jsx","сomponents/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","сomponents/Profile/ProfileInfo/ProfileStatus.jsx","сomponents/Profile/ProfileInfo/ProfileDataForm.jsx","сomponents/Profile/ProfileInfo/ProfileInfo.jsx","сomponents/Profile/Profile.jsx","сomponents/Profile/ProfileContainer.jsx","redux/auth-reducer.js","сomponents/Header/HeaderContainer.jsx","сomponents/Login/Login.jsx","redux/app-reducer.js","App.js","reportWebVitals.js","redux/redux-store.js","index.js","сomponents/common/FormControl/FormsControls.module.css","assets/images/user.png","сomponents/Header/Header.module.css","сomponents/Profile/Profile.module.css","сomponents/common/Paginator/Paginator.module.css","сomponents/Users/users.module.css"],"names":["module","exports","postsBlock","posts","__webpack_require__","p","item","nav","active","statusBlock","userDataBlock","avaBlock","photoBlock","testBlock","contact","dialogs","dialogsItems","messages","message","Header","props","react_default","a","createElement","className","s","header","img1","src","h1","loginBlock","isAuth","login","onClick","logout","react_router_dom","to","Navbar","navData","isActive","News","initialState","messagesData","id","dialogsData","name","dialogsReducer","state","arguments","length","undefined","action","type","body","newMessageBody","Object","objectSpread","concat","toConsumableArray","instance","axios","create","withCredentials","baseURL","headers","API-KEY","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userid","post","unfollow","delete","getProfile","userId","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","Content-Type","saveProfile","profile","authAPI","email","password","rememberMe","postsData","count","setStatus","getUserProfile","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","wrap","_context","prev","next","sent","stop","_x","apply","this","profileReducer","newPost","newPostText","photos","sidebarReducer","store","_state","profilePage","dialogsPage","sidebar","_callSubscriber","console","log","getState","subscribe","observer","window","DialogItem","path","dialog","Message","FormControl","input","meta","child","objectWithoutProperties","hasError","touched","error","styles","formControl","children","TextArea","restProps","FormsControls_FormControl","assign","Input","createField","placeholder","component","validate","text","Field","required","value","maxLengthCreator","maxLength","maxLength50","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Dialogs","dialogsElement","map","Dialogs_DialogItem_DialogItem","key","messageElement","Dialogs_Message_Message","react_router","values","sendMessage","mapStateToPropsForRedirect","auth","withAuthRedirect","Component","connect","compose","sendMessageCreator","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","_ref2","users_reducer_regeneratorRuntime","_callee2","apiMethod","actionCreator","_context2","resultCode","_x2","_x3","_x4","_x5","usersReduser","u","followed","filter","Paginator","totalItemsCount","onPageChanged","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","_useState","useState","_useState2","slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightProtionPageNumber","selectedPage","e","User","user","small","userPhoto","disabled","some","Users","common_Paginator_Paginator","Users_User","Preloader","preloader","getUsersSelector","usersPage","getPageSizeSelector","getTotalUsersCountSelector","getCurrentPageSelector","getIsFetchingSelector","getFollowingInProgressSelector","UsersContainer","pageNumber","_this","Fragment","preloader_Preloader","_omponents_Users_Users","React","_ref3","_callee3","_context3","bind","_x6","_ref4","_callee4","_context4","_x7","items","totalCount","Post","maxLength10","AddNewPostFormRedux","onFocus","MyPosts","postsElement","MyPosts_Post_Post","createRef","addPost","MyPostsContainer","addPostActionCreator","ProfileStatusWithHooks","editMode","setEditMode","_useState3","_useState4","useEffect","onChange","currentTarget","autoFocus","onBlur","ProfieleDataFormReduxForm","style","formSummaryError","keys","contacts","ProfieleData","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo_Contact","contactTitile","contactValue","Contact","ProfileInfo","large","inputFile","target","files","infoBlock","ProfileInfo_ProfileStatusWithHooks","ProfileDataForm","initialValues","ProfileInfo_ProfieleData","Profile","headBlock","profileInfoBlock","Profile_ProfileInfo_ProfileInfo","profileBlock","myPostsBlock","MyPosts_MyPostsContainer","withRouter","Children","router","params","useParams","ProfileContainer","authorizedUserId","refreshProfile","prevProps","_omponents_Profile_Profile","PureComponent","file","_ref5","_callee5","errorObj","match","fieldName","_context5","_error","toLowerCase","stopSubmit","setAuthUserData","payload","getAuthUserData","auth_reducer_regeneratorRuntime","_response$data$data","_login","authReducer","HeaderContainer","_omponents_Header_Header","LoginReduxForm","initialized","App","initializeApp","Header_HeaderContainer","_omponents_Navbar_Navbar","element","Profile_ProfileContainer","DialogsContainer","_omponents_News_News","Users_UsersContainer","_omponents_Login_Login","app","promise","Promise","all","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","applyMiddleware","thunkMiddleware","__store__","ReactDOM","createRoot","document","getElementById","render","react_redux_es","src_App_0","carouselBlock","paginator"],"mappings":"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","file":"static/js/main.f0623d13.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2-TpK\",\"posts\":\"MyPosts_posts__3EPk3\"};","module.exports = __webpack_public_path__ + \"static/media/Spinner-1s-200px.b31e8610.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2vJar\"};","module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3znSp\",\"active\":\"Navbar_active__3LBGp\",\"item\":\"Navbar_item__HiW-g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusBlock\":\"ProfileInfo_statusBlock__3TtQn\",\"userDataBlock\":\"ProfileInfo_userDataBlock__3uIqx\",\"avaBlock\":\"ProfileInfo_avaBlock__3uce4\",\"photoBlock\":\"ProfileInfo_photoBlock__1V3mg\",\"testBlock\":\"ProfileInfo_testBlock__1kmY5\",\"contact\":\"ProfileInfo_contact__2I6lN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3RTyb\",\"dialogsItems\":\"Dialogs_dialogsItems__eYGYG\",\"active\":\"Dialogs_active__1d3cZ\",\"messages\":\"Dialogs_messages__1Lf3J\",\"message\":\"Dialogs_message__1Aco3\"};","import React from \"react\";\r\nimport { NavLink, Route } from \"react-router-dom\";\r\nimport s from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n      <img className={s.img1} src=\"https://img.freepik.com/premium-vector/logo-letter-sn_638109-16.jpg\"/>\r\n      <span className={s.h1}>Social network</span>\r\n      \r\n\r\n    <div className={s.loginBlock}>\r\n      {props.isAuth \r\n      ? <div>\r\n          <div>{props.login}</div> \r\n          <button onClick={props.logout}>Log out</button>\r\n        </div>\r\n      :<NavLink to={'/login'}>Login</NavLink> }\r\n    </div>\r\n  </header>\r\n}\r\n\r\nexport default Header;","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from './Navbar.module.css'\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div>\r\n                <ul>\r\n                    <li>\r\n                        <NavLink to=\"/profile\" className={ navData => navData.isActive ? s.active: s.item}>Profile</NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div>\r\n                <ul>\r\n                    <li>\r\n                        <NavLink to=\"/dialogs\" className={ navData => navData.isActive ? s.active: s.item}>Message</NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div>\r\n                <ul>\r\n                    <li>\r\n                        <NavLink to=\"/news\" className={ navData => navData.isActive ? s.active: s.item}>News</NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div>\r\n                <ul>\r\n                    <li>\r\n                        <NavLink to=\"/users\" className={ navData => navData.isActive ? s.active: s.item}>Users</NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className={s.item}>\r\n                <ul>\r\n                    <li>\r\n                        <a>Music</a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className={s.item}>\r\n                <ul>\r\n                    <li>\r\n                        <a>Setting</a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    \r\n    messagesData: [\r\n        {id: 1, message: 'Hi'}, \r\n        {id: 2, message: 'How is your'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ],\r\n    \r\n    dialogsData: [\r\n        {id: 1, name: 'Nikita'}, \r\n        {id: 2, name: 'Stas'},\r\n        {id: 3, name: 'Gena'},\r\n        {id: 4, name: 'Turbo'},\r\n        {id: 5, name: 'Dusha'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SEND_MESSAGE: //Если тип acion = SEND_MESSAGE\r\n            let body = action.newMessageBody; //Присваиваем значение переменной сообщения\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, {id: 6, message: body}]//Пушим в стейт новое сообщение\r\n            };\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const sendMessageCreator = (newMessageBody) => {\r\n    return {\r\n        type : SEND_MESSAGE,\r\n        newMessageBody\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default dialogsReducer;","import axios from \"axios\"\r\n\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"594301d4-5e10-4b5a-b5ad-6549ff84c6b9\"\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n        });\r\n    },\r\n    follow(userid) {\r\n        return instance.post(`follow/${userid}`)\r\n    },\r\n    unfollow(userid) {\r\n        return instance.delete(`follow/${userid}`)\r\n    },\r\n    getProfile(userId) {\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n        \r\n}\r\n\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status){\r\n        return instance.put(`profile/status`, {\r\n            status: status\r\n        });\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {\r\n            email, password, rememberMe\r\n        });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\n","import { act } from \"react-dom/test-utils\";\r\nimport { stopSubmit } from \"redux-form\";\r\nimport { profileAPI, usersAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n            \r\n    postsData: [\r\n        {id: 1, message: 'Winner 7 ballon d`or', count:12}, \r\n        {id: 2, message: 'Winner 5 golgen foot', count:44},\r\n        {id: 2, message: 'World championship winner', count:34}\r\n    ],\r\n    \r\n    profile: null,\r\n\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                count: 12\r\n            };\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        }\r\n\r\n        default: \r\n            return state;\r\n            \r\n            \r\n    }\r\n\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => {\r\n    return {\r\n        type: ADD_POST,\r\n        newPostText\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const setUserProfile = (profile) => {\r\n    return {\r\n        type: SET_USER_PROFILE, \r\n        profile\r\n    }\r\n}\r\n\r\nexport const setStatus = (status) => {\r\n    return {\r\n        type: SET_STATUS,\r\n        status: status\r\n    }\r\n}\r\n\r\n\r\nexport const savePhotoSuccess = (photos) => {\r\n    return {\r\n        type: SAVE_PHOTO_SUCCESS,\r\n        photos: photos\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if(response.data.resultCode  === 0){\r\n        dispatch(setStatus(status));\r\n    }   \r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n    if(response.data.resultCode  === 0){\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }   \r\n}\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n    if(response.data.resultCode  === 0){\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        let error = response.data.messages[0];\r\n        let errorObj = {'_error': error};\r\n        let match =  error.match(/Invalid url format \\(Contacts->(.+)\\)/);\r\n        if (match) {\r\n            let fieldName = match[1].toLowerCase()\r\n            errorObj = { 'contacts': {}}\r\n            errorObj.contacts[fieldName] = error\r\n        }\r\n        //dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}));\r\n        //return Promise.reject(response.data.messages[0]);\r\n        dispatch(stopSubmit(\"edit-profile\", errorObj))  \r\n        throw error;\r\n    }\r\n}\r\n\r\nexport default profileReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import dialogsReducer from \"./dialogs-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\n\r\nlet store = {\r\n    _state: {\r\n\r\n        profilePage: {\r\n            \r\n            postsData: [\r\n                {id: 1, message: 'Hi, how are you?', count:12}, \r\n                {id: 2, message: 'Its my first post', count:44},\r\n                {id: 2, message: 'Blabla', count:34}\r\n            ],\r\n    \r\n            newPostText: 'it-kamasutra.com'\r\n            \r\n            \r\n        },\r\n    \r\n        dialogsPage: {\r\n    \r\n            messagesData: [\r\n                {id: 1, message: 'Hi'}, \r\n                {id: 2, message: 'How is your'},\r\n                {id: 3, message: 'Yo'},\r\n                {id: 4, message: 'Yo'},\r\n                {id: 5, message: 'Yo'}\r\n            ],\r\n            \r\n            dialogsData: [\r\n                {id: 1, name: 'Nikita'}, \r\n                {id: 2, name: 'Stas'},\r\n                {id: 3, name: 'Gena'},\r\n                {id: 4, name: 'Turbo'},\r\n                {id: 5, name: 'Dusha'}\r\n            ],\r\n\r\n            newMessageBody: \"\"\r\n        },\r\n\r\n        sidebar: {}\r\n    },\r\n    _callSubscriber() {\r\n        console.log('State changed');\r\n    },\r\n\r\n    getState() {\r\n        return this._state;\r\n    },\r\n    subscribe(observer) {\r\n        this._callSubscriber = observer;\r\n    },\r\n\r\n    dispatch(action) {\r\n\r\n        this._state.profilePage = profileReducer(this._state.profilePage, action);\r\n        this._state.dialogsPage = dialogsReducer(this._state.dialogsPage, action);\r\n        this._state.sidebar = sidebarReducer(this._state.sidebar, action);\r\n\r\n        this._callSubscriber(this._state);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default store;\r\nwindow.state = store;","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport styles from \"./FormsControls.module.css\";\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            { hasError &&\r\n                <span>\r\n                    {meta.error}\r\n                </span>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n    )\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n    )\r\n}\r\n\r\n\r\nexport const createField = (placeholder, name, component, validate, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} component={component} validate={validate} {...props} /> {text}\r\n    </div>\r\n)","export const required = value => {\r\n    if(value) {\r\n        return undefined    \r\n    } else {\r\n        return 'Field is required';\r\n    }\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) {\r\n        return `Max length is ${maxLength} symbols`; \r\n    } else {\r\n        return undefined;\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport { Navigate, NavLink } from \"react-router-dom\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { TextArea } from \"../common/FormControl/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n\r\n    let dialogsElement = state.dialogsData\r\n        .map( dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id}/> ); \r\n        \r\n\r\n    let messageElement = state.\r\n    messagesData\r\n        .map( message => <Message message={message.message} key={message.id} />)\r\n\r\n    \r\n    let newMessageBody = state.newMessageBody;\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if(props.isAuth === false) {\r\n        return <Navigate to={'/login'} />\r\n    }\r\n\r\n        \r\n    return (\r\n        <div className={s.dialogs}>\r\n           <div className={s.dialogsItems}>\r\n                {dialogsElement}\r\n           </div>\r\n           <div className={s.messages}>\r\n                <div>{messageElement}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage} />\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n            <div>\r\n                <Field component={TextArea} validate={[required, maxLength50]} name=\"newMessageBody\" placeholder=\"Enter your message\"/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from \"react\"\r\nimport { Navigate } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    let redirectComponent = (props) => {\r\n        if(!props.isAuth) {\r\n            return <Navigate to={'/login'} />\r\n        }\r\n        return <Component {...props} />\r\n    }\r\n\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(redirectComponent);\r\n    \r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}\r\n\r\n","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { sendMessageCreator, updateNewMessageBodyCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport store from \"../../redux/store\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../api/hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);","import { usersAPI } from \"../api/api\";\r\n\r\n\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\n\r\n\r\nlet initialState = {\r\n    users: [ ],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\n\r\n\r\nconst usersReduser = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FOLLOW: \r\n            return {\r\n                ...state, \r\n                users: state.users.map( u =>  {\r\n                    if (u.id === action.userid) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW: \r\n            return {\r\n                ...state,\r\n                users: state.users.map (u => {\r\n                    if (u.id === action.userid) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                } )\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return  {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return  {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return  {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {...state, followingInProgress: action.isFetching \r\n                ? [...state.followingInProgress, action.userid] \r\n                : state.followingInProgress.filter(id => id != action.userid)}\r\n        }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userid) => (\r\n    {type: FOLLOW, userid}\r\n)\r\n\r\nexport const unfollowSuccess = (userid) => (\r\n    {type: UNFOLLOW, userid}\r\n)\r\n\r\nexport const setUsers = (users) => (\r\n    {type: SET_USERS, users}\r\n)\r\n\r\nexport const setCurrentPage = (currentPage) => (\r\n    {type: SET_CURRENT_PAGE, currentPage}\r\n\r\n)\r\n\r\nexport const setTotalUsersCount = (totalUsersCount) => (\r\n    {type: SET_TOTAL_USERS_COUNT, count: totalUsersCount}\r\n)\r\n\r\nexport const toggleIsFetching = (isFetching) => (\r\n    {type: TOGGLE_IS_FETCHING, isFetching}\r\n)\r\n\r\nexport const toggleFollowingProgress = (isFetching, userid) => (\r\n    {type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userid}\r\n)\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n    \r\n        dispatch(toggleIsFetching(true));\r\n\r\n        let data = await usersAPI.getUsers(currentPage, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n        dispatch(setCurrentPage(currentPage));\r\n    }\r\n}\r\n\r\n\r\nconst followUnfollowFlow = async (dispatch, userid, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userid));\r\n        let response = await apiMethod(userid);\r\n        if(response.data.resultCode === 0){\r\n            dispatch(actionCreator(userid));\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userid));\r\n}\r\n\r\n\r\n\r\n\r\nexport const follow = (userid) => {\r\n\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userid, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userid) => {\r\n\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userid, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\n\r\nexport default usersReduser;","import React, { useState } from \"react\";\r\nimport styles from './Paginator.module.css';\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10, ...props}) => {\r\n\r\n    let pagesCount = Math.ceil (totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightProtionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n\r\n    return (\r\n        <div className={styles.pages}>\r\n        \r\n\r\n        <div className={styles.pages}>\r\n        { portionNumber > 1 && <button onClick={() => {setPortionNumber(portionNumber - 1)}}>PREV</button> }\r\n            {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<= rightProtionPageNumber)\r\n            .map((p) => {\r\n                return <button className={( currentPage === p && styles.selectedPage )} key={p} onClick={(e)=> {onPageChanged(p)}} >{p}</button>\r\n            })}\r\n        {portionCount > portionNumber &&\r\n        <button onClick={() => {setPortionNumber(portionNumber + 1)}}>NEXT</button>}\r\n        </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Paginator;","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { usersAPI } from \"../../api/api\";\r\nimport userPhoto from '../../assets/images/user.png'\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport styles from './users.module.css';\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto} className={styles.userPhoto}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    { user.followed ? \r\n                        <button disabled={followingInProgress.\r\n                            some(id => id === user.id)} \r\n                                onClick={ () => {unfollow(user.id);}}>\r\n                                    Unfollow</button> \r\n                            : <button disabled={followingInProgress.some(id => id === user.id)} \r\n                                onClick={ () => {follow(user.id);}}>\r\n                                Follow</button>}\r\n                    \r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>\r\n                        {user.name}\r\n                    </div>\r\n                    <div>\r\n                        {user.status}\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <div>\r\n                        {\"u.location.country\"}\r\n                        \r\n                    </div>\r\n                    <div>\r\n                        {\"u.location.city\"}\r\n                    </div>\r\n                </span>\r\n            </span>\r\n        </div>)\r\n}\r\n\r\nexport default User;","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { usersAPI } from \"../../api/api\";\r\nimport userPhoto from '../../assets/images/user.png'\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport styles from './users.module.css';\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n\r\n\r\n    return <div>\r\n    <Paginator currentPage={currentPage} onPageChanged={onPageChanged} totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n    <div>\r\n    {\r\n        users.map( u => <User user={u} key={u.id} followingInProgress={props.followingInProgress} unfollow={props.unfollow} follow={props.follow}/>\r\n        )}\r\n    </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","import React from \"react\";\r\nimport preloader from \"../../../assets/images/Spinner-1s-200px.svg\";\r\n\r\n\r\nlet Preloader = (props) => {\r\n    return <div>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import { createSelector } from \"reselect\";\r\n\r\n\r\nexport const getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\n\r\nexport const getPageSizeSelector = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCountSelector = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPageSelector = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetchingSelector = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgressSelector = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { follow, setCurrentPage, setUsers, unfollow, toggleFollowingProgress, getUsers } from \"../../redux/users-reducer\";\r\nimport axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/preloader/Preloader\";\r\n\r\nimport { usersAPI } from \"../../api/api\";\r\nimport { withAuthRedirect } from \"../../api/hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { getCurrentPageSelector, getFollowingInProgressSelector, getIsFetchingSelector, getPageSizeSelector, getTotalUsersCountSelector, getUsersSelector } from \"../../redux/users-selectors\";\r\n\r\n\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n        \r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount} \r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}\r\n                    users={this.props.users}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                    followingInProgress={this.props.followingInProgress}\r\n        />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     }\r\n// }\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSelector(state),\r\n        pageSize: getPageSizeSelector(state),\r\n        totalUsersCount: getTotalUsersCountSelector(state),\r\n        currentPage: getCurrentPageSelector(state),\r\n        isFetching: getIsFetchingSelector(state),\r\n        followingInProgress: getFollowingInProgressSelector(state)\r\n    }\r\n}\r\n\r\n\r\n/*let mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userid) => {\r\n            dispatch(followAC(userid));\r\n        },\r\n        unfollow: (userid) => {\r\n            dispatch(unfollowAC(userid));\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users));\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageAC(pageNumber));\r\n        },\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setUsersTotalCountAC(totalCount));\r\n        },\r\n        toggleIsFetching: (isFetching) => {\r\n            dispatch(toggleIsFetchingAC(isFetching));\r\n        }\r\n    }\r\n}*/\r\n\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, \r\n        {follow, unfollow, setCurrentPage,   \r\n            toggleFollowingProgress, getUsers})\r\n)(UsersContainer);","import React from \"react\";\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRnniNYtN6hPqqz1EQVxhP5mJBYNPeI4M6TAw&usqp=CAU' />\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.count}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from \"../../../redux/profile-reducer\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport { TextArea } from \"../../common/FormControl/FormsControls\";\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newPostText\" component={TextArea} placeholder=\"Post message\"\r\n                        validate={[required, maxLength10]} onFocus=\"this.\"/>\r\n            </div>\r\n            <div>\r\n                <button>AddPost</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsElement = props.postsData.map( posts => <Post key={posts.id} message={posts.message} count={posts.count} />);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n\r\n    return <div className={s.postsBlock}>\r\n        <h3>My Posts</h3>\r\n        <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n        <div className={s.posts}>\r\n            {postsElement}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React, { useEffect, useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {!editMode &&\r\n                <div>\r\n                    <b>Status: </b> <span onClick={activateMode}>{props.status || '-----------'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateMode} value={status}/>\r\n            </div>\r\n            }\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode () {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    } \r\n\r\n    deactivateEditMode () {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        }); \r\n    }\r\n\r\n    \r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.status !== this.props.status){\r\n            this.setState({\r\n                status: this.props.status   \r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onClick={this.activateEditMode.bind(this)}>{this.props.status}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode.bind(this)} value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from \"react\"\r\nimport { reduxForm } from \"redux-form\";\r\nimport { createField, Input, TextArea } from \"../../common/FormControl/FormsControls\";\r\nimport s from './ProfileInfo.module.css'\r\nimport style from \"../../common/FormControl/FormsControls.module.css\"\r\n\r\nconst ProfieleDataForm = ({handleSubmit, profile, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div><button>Save</button></div>\r\n            { error &&\r\n                <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>\r\n                }\r\n        <div>\r\n            <b>Full name</b>: {createField(\"Full name\", \"fullName\", Input, [])} \r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", Input, [], {type: \"checkbox\"})} \r\n        </div>\r\n        <div>\r\n            <b>My professional skills</b>: {createField(\"My professional skills\", \"lookingForAJobDescription\", TextArea, [])} \r\n        </div>\r\n        <div>\r\n            <b>About me</b>:  {createField(\"About me\", \"aboutMe\", TextArea, [])}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={s.contact}>\r\n                    <b>{key}: {createField(key, \"contacts.\" + key, Input, [])} </b> \r\n                </div>\r\n            }) } \r\n        </div>\r\n        \r\n        </form>\r\n    )\r\n}\r\n\r\n//const ProfieleDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfieleDataForm)\r\n\r\nconst ProfieleDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfieleDataForm)\r\n\r\nexport default ProfieleDataFormReduxForm;","import React, { useState } from \"react\";\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport s from './ProfileInfo.module.css'\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from '../../../assets/images/user.png'\r\nimport ProfieleDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({updateStatus, profile, status, isOwner, savePhoto, saveProfile}) => {\r\n\r\n\r\n    let [editMode, setEditMode] = useState(false); \r\n\r\n\r\n    if(!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if(e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n        \r\n    }\r\n\r\n    return (\r\n    <div>\r\n        <div className={s.photoBlock}>\r\n            <div className={s.testBlock}>\r\n                <div className={s.avaBlock}>\r\n                    <img src={profile.photos.large || userPhoto}/>\r\n                </div>\r\n                <div className={s.inputFile}>\r\n                    {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n                </div>\r\n            </div>\r\n            <div className={s.infoBlock}>\r\n\r\n                <ProfileStatusWithHooks className={s.statusBlock} status={status != null ? status : \"User is not has status\"} updateStatus={updateStatus} />\r\n\r\n\r\n                {editMode \r\n                    ? <ProfieleDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/> \r\n                    : <ProfieleData profile={profile} isOwner={isOwner} goToEditMode={() => {setEditMode(true)}}/> }\r\n                \r\n\r\n            </div>\r\n        </div>\r\n        {/* <div className={s.descriptionBlock}>\r\n            Описание: Лионель Андрес Месси — один из лучших современных футболистов, играет в составе испанской «Барселоны», капитан сборной Аргентины. Спортсмен родился 24 июня 1987 года в Росарио. За 29 лет Месси успел достичь значительных результатов в футболе, несмотря на все перенесённые трудности. \r\n        </div> */}\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nconst ProfieleData = ({profile, isOwner, goToEditMode}) => {\r\n    return (\r\n        <div className={s.userDataBlock}>\r\n        {isOwner && <div><button onClick={goToEditMode}>Edit</button></div>}\r\n        <div>\r\n            <b>Full name</b>: {profile.fullName} \r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"} \r\n        </div>\r\n        {profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professional skills</b>: {profile.lookingForAJobDescription} \r\n            </div>\r\n        }\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe} \r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitile={key} contactValue={profile.contacts[key]} />\r\n            }) } \r\n        </div>\r\n        \r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst Contact = ({contactTitile, contactValue}) => {\r\n    return(\r\n        <div className={s.contact}>\r\n            <b>{contactTitile}</b>: {contactValue}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport { ParentComponent } from \"./Carousel/parentCarousel\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport s from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n    <div>\r\n        <h2 className={s.headBlock}>Profile user</h2>\r\n        <div className={s.profileInfoBlock}>\r\n            <ProfileInfo profile={props.profile} \r\n                        status={props.status} \r\n                        updateStatus={props.updateStatus} \r\n                        isOwner={props.isOwner} \r\n                        savePhoto={props.savePhoto} \r\n                        saveProfile={props.saveProfile}/>\r\n        </div>\r\n        <div className={s.profileBlock}>\r\n            <div className={s.myPostsBlock}>\r\n                <MyPostsContainer />\r\n            </div>\r\n            {/* <div className={s.carouselBlock}>\r\n                <h2>Photos</h2>\r\n                <ParentComponent/>\r\n            </div> */}\r\n        </div>\r\n        \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport axios from \"axios\";\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from \"../../redux/profile-reducer\";\r\nimport { Navigate, useParams } from \"react-router-dom\";\r\nimport { usersAPI } from \"../../api/api\";\r\nimport { withAuthRedirect } from \"../../api/hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nexport function withRouter(Children) {\r\n    return (props) => {\r\n        const router = {params: useParams()};\r\n        return <Children {...props} router={router}/>\r\n    }\r\n}\r\n\r\n\r\nclass ProfileContainer extends React.PureComponent {\r\n\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.router.params.userId;\r\n\r\n\r\n        if(!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            // if(!userId){\r\n            //     this.props.history.push(\"/login\");\r\n            // }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        \r\n        this.refreshProfile();\r\n\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.router.params.userId != prevProps.router.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /*componentDidUpdate(prevProps) {\r\n        let userId = this.props.router.params.userId\r\n        if (prevProps.router.params.userId !== userId) {\r\n          let userId = 2\r\n          axios.get(`https://social-network.samuraijs.com/api/1.0/profile`)\r\n            .then(response => {\r\n              this.props.setUserProfile(response.data);\r\n            });\r\n        }\r\n      }*/\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} \r\n                profile={this.props.profile} \r\n                status={this.props.status} \r\n                updateStatus={this.props.updateStatus} \r\n                isOwner={!this.props.router.params.userId} \r\n                savePhoto={this.props.savePhoto}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../api/api\";\r\n\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}});\r\n\r\n\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if(response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n        if(response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData())\r\n        } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n            dispatch(stopSubmit(\"login\", {_error: message}));\r\n        }\r\n    \r\n}\r\n\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n        if(response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n}\r\n\r\n\r\n\r\nexport default authReducer;","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"./Header\";\r\nimport { getAuthUserData, logout } from \"../../redux/auth-reducer\";\r\nimport { authAPI } from \"../../api/api\";\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    \r\n\r\n    render() {\r\n        return <Header {...this.props}  />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { required } from \"../../utils/validators/validators\";\r\nimport { createField, Input } from \"../common/FormControl/FormsControls\";\r\nimport { login } from \"../../redux/auth-reducer\"\r\nimport { Navigate } from \"react-router-dom\";\r\nimport style from \"../common/FormControl/FormsControls.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n            <form onSubmit={handleSubmit}>\r\n                {createField(\"Email\", \"email\", Input, [required])}\r\n                {createField(\"Password\", \"password\", Input, [required], {type: \"password\"})}\r\n                {createField(null, \"rememberMe\", Input, [], {type: \"checkbox\"}, \"remember me\")}\r\n                { error &&\r\n                <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>\r\n                }\r\n                <div>\r\n                    <button>Login</button>\r\n                </div>\r\n            </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if(props.isAuth) {\r\n        return <Navigate to={'/profile'} />\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import { getAuthUserData } from \"./auth-reducer\";\r\n\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => ({\r\n    type: INITIALIZED_SUCCESS\r\n});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    \r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport Header from './сomponents/Header/Header';\nimport Navbar from './сomponents/Navbar/Navbar';\nimport News from './сomponents/News/News';\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport React from 'react';\nimport store, { updateNewPostText } from './redux/store';\nimport DialogsContainer from './сomponents/Dialogs/DialogsContainer';\nimport UsersContainer from './сomponents/Users/UsersContainer';\nimport ProfileContainer, { withRouter } from './сomponents/Profile/ProfileContainer';\nimport HeaderContainer from './сomponents/Header/HeaderContainer';\nimport LoginPage from './сomponents/Login/Login';\nimport { connect } from 'react-redux';\nimport {getAuthUserData} from \"../src/redux/auth-reducer\"\nimport { compose } from 'redux';\nimport {initializeApp} from \"../src/redux/app-reducer\"\nimport Preloader from './сomponents/common/preloader/Preloader';\n\n\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n\n  render() {\n\n    if(!this.props.initialized) {\n      return <Preloader />\n    }\n\n    return (\n    //<BrowserRouter>\n      <div className='app-wrapper'>\n        <HeaderContainer />\n        <Navbar />\n        <div className='app-wrapper-content'>\n          <Routes>\n            <Route path='/profile' element={<ProfileContainer/>}>\n              <Route path=':userId' element={<ProfileContainer />} />\n            </Route>\n            <Route path='/dialogs' element={<DialogsContainer />} />\n            <Route path='/news' element={<News/>} />\n            <Route path='/users' element={ <UsersContainer /> } />\n            <Route path='/login' element={ <LoginPage/> } />\n          </Routes>\n        </div>\n      </div>\n    //</BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\n\nexport default  compose(withRouter, connect(mapStateToProps, {initializeApp}))(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, compose, legacy_createStore as createStore} from \"redux\";\r\nimport authReducer from \"./auth-reducer\";\r\n\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReduser from \"./users-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport {appReducer} from \"./app-reducer\"\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReduser,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.__store__ = store;\r\n\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/redux-store';\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n  \nroot.render(\n  //<React.StrictMode>\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>\n  //</React.StrictMode>\n);\n\n\n\n\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1C0S4\",\"error\":\"FormsControls_error__1UHz0\",\"formSummaryError\":\"FormsControls_formSummaryError__eYr79\"};","module.exports = __webpack_public_path__ + \"static/media/user.e3f238af.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2yn1V\",\"h1\":\"Header_h1__XSNdR\",\"img1\":\"Header_img1__292t8\",\"loginBlock\":\"Header_loginBlock__2-zD_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPostsBlock\":\"Profile_myPostsBlock__K9ZWg\",\"headBlock\":\"Profile_headBlock__1Cl5s\",\"carouselBlock\":\"Profile_carouselBlock__Jvgbl\",\"profileBlock\":\"Profile_profileBlock__3YA7G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__KfRKs\",\"pages\":\"Paginator_pages__16G5e\",\"paginator\":\"Paginator_paginator__3YfTV\",\"pageNumber\":\"Paginator_pageNumber__3djdt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__jiHaz\"};"],"sourceRoot":""}